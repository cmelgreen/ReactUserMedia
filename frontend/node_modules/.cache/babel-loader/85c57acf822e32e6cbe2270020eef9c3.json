{"ast":null,"code":"export function startConnection(stream){var pc=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'}]});var socket=new WebSocket(\"ws://\"+window.location.hostname+\":8050/ws\");pc.addStream(stream);pc.createOffer().then(function(d){return pc.setLocalDescription(d);});pc.onicecandidate=function(event){if(isOpen(socket)&&event.candidate!=null){send(socket,event.candidate);}};receive(socket);}function isOpen(socket){return socket.readyState==WebSocket.OPEN;}function send(socket,data){socket.send(JSON.stringify(data));}function receive(socket){return socket.onmessage=function(receivedString){var message=JSON.parse(receivedString);console.log(message);if(message.ice){console.log(message.ice);pc.addIceCandidate(message.ice).catch(function(e){console.log(\"Failure during addIceCandidate(): \"+e.name);});}};}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTC.js"],"names":["startConnection","stream","pc","RTCPeerConnection","iceServers","urls","socket","WebSocket","window","location","hostname","addStream","createOffer","then","d","setLocalDescription","onicecandidate","event","isOpen","candidate","send","receive","readyState","OPEN","data","JSON","stringify","onmessage","receivedString","message","parse","console","log","ice","addIceCandidate","catch","e","name"],"mappings":"AAAA,MAAO,SAASA,CAAAA,eAAT,CAAyBC,MAAzB,CAAiC,CACpC,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,iBAAJ,CAAsB,CAC3BC,UAAU,CAAE,CACR,CACIC,IAAI,CAAE,8BADV,CADQ,CADe,CAAtB,CAAT,CASA,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,SAAJ,CAAc,QAAUC,MAAM,CAACC,QAAP,CAAgBC,QAA1B,CAAqC,UAAnD,CAAb,CAEAR,EAAE,CAACS,SAAH,CAAaV,MAAb,EACAC,EAAE,CAACU,WAAH,GAAiBC,IAAjB,CAAsB,SAAAC,CAAC,QAAIZ,CAAAA,EAAE,CAACa,mBAAH,CAAuBD,CAAvB,CAAJ,EAAvB,EAEAZ,EAAE,CAACc,cAAH,CAAoB,SAAAC,KAAK,CAAI,CACzB,GAAKC,MAAM,CAACZ,MAAD,CAAN,EAAkBW,KAAK,CAACE,SAAN,EAAmB,IAA1C,CAAgD,CAC5CC,IAAI,CAACd,MAAD,CAASW,KAAK,CAACE,SAAf,CAAJ,CACH,CACJ,CAJD,CAMAE,OAAO,CAACf,MAAD,CAAP,CACH,CAED,QAASY,CAAAA,MAAT,CAAgBZ,MAAhB,CAAwB,CACpB,MAAQA,CAAAA,MAAM,CAACgB,UAAP,EAAqBf,SAAS,CAACgB,IAAvC,CACH,CAED,QAASH,CAAAA,IAAT,CAAcd,MAAd,CAAsBkB,IAAtB,CAA4B,CACxBlB,MAAM,CAACc,IAAP,CAAYK,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAZ,EACH,CAED,QAASH,CAAAA,OAAT,CAAiBf,MAAjB,CAAyB,CACrB,MAAOA,CAAAA,MAAM,CAACqB,SAAP,CAAmB,SAAAC,cAAc,CAAI,CACxC,GAAMC,CAAAA,OAAO,CAAGJ,IAAI,CAACK,KAAL,CAAWF,cAAX,CAAhB,CACAG,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAEA,GAAIA,OAAO,CAACI,GAAZ,CAAiB,CACbF,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,GAApB,EACA/B,EAAE,CAACgC,eAAH,CAAmBL,OAAO,CAACI,GAA3B,EAAgCE,KAAhC,CAAsC,SAAAC,CAAC,CAAI,CACvCL,OAAO,CAACC,GAAR,CAAY,qCAAuCI,CAAC,CAACC,IAArD,EACH,CAFD,EAGH,CACJ,CAVD,CAWH","sourcesContent":["export function startConnection(stream) {\n    let pc = new RTCPeerConnection({\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n                \n            }\n        ]\n    })\n\n    var socket = new WebSocket(\"ws://\" + window.location.hostname + \":8050/ws\");\n\n    pc.addStream(stream)\n    pc.createOffer().then(d => pc.setLocalDescription(d))\n\n    pc.onicecandidate = event => {\n        if ( isOpen(socket) && event.candidate != null) {\n            send(socket, event.candidate)\n        }\n    };\n\n    receive(socket)\n}\n\nfunction isOpen(socket) {\n    return (socket.readyState == WebSocket.OPEN)\n}\n\nfunction send(socket, data) {\n    socket.send(JSON.stringify(data))\n}\n\nfunction receive(socket) {\n    return socket.onmessage = receivedString => {\n        const message = JSON.parse(receivedString);\n        console.log(message);\n\n        if (message.ice) {  \n            console.log(message.ice);    \n            pc.addIceCandidate(message.ice).catch(e => {\n                console.log(\"Failure during addIceCandidate(): \" + e.name);\n            });\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}