{"ast":null,"code":"export function startConnection(stream){var pc=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'}]});var socket=new WebSocket(\"ws://\"+window.location.hostname+\":8050/ws\");pc.addStream(stream);pc.createOffer().then(function(d){return pc.setLocalDescription(d);});pc.onicecandidate=function(event){if(isOpen(socket)&&event.candidate!=null){send(socket,JSON.stringify(event.candidate));}};receive(socket);}function isOpen(socket){return socket.readyState==WebSocket.OPEN;}function send(socket,data){socket.send(btoa(data));}function receive(socket){return socket.onmessage=function(event){return console.log(event.data);};}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTC.js"],"names":["startConnection","stream","pc","RTCPeerConnection","iceServers","urls","socket","WebSocket","window","location","hostname","addStream","createOffer","then","d","setLocalDescription","onicecandidate","event","isOpen","candidate","send","JSON","stringify","receive","readyState","OPEN","data","btoa","onmessage","console","log"],"mappings":"AAAA,MAAO,SAASA,CAAAA,eAAT,CAAyBC,MAAzB,CAAiC,CACpC,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,iBAAJ,CAAsB,CAC3BC,UAAU,CAAE,CACR,CACIC,IAAI,CAAE,8BADV,CADQ,CADe,CAAtB,CAAT,CASA,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,SAAJ,CAAc,QAAUC,MAAM,CAACC,QAAP,CAAgBC,QAA1B,CAAqC,UAAnD,CAAb,CAEAR,EAAE,CAACS,SAAH,CAAaV,MAAb,EACAC,EAAE,CAACU,WAAH,GAAiBC,IAAjB,CAAsB,SAAAC,CAAC,QAAIZ,CAAAA,EAAE,CAACa,mBAAH,CAAuBD,CAAvB,CAAJ,EAAvB,EAEAZ,EAAE,CAACc,cAAH,CAAoB,SAAAC,KAAK,CAAI,CACzB,GAAKC,MAAM,CAACZ,MAAD,CAAN,EAAkBW,KAAK,CAACE,SAAN,EAAmB,IAA1C,CAAgD,CAC5CC,IAAI,CAACd,MAAD,CAASe,IAAI,CAACC,SAAL,CAAeL,KAAK,CAACE,SAArB,CAAT,CAAJ,CACH,CACJ,CAJD,CAMAI,OAAO,CAACjB,MAAD,CAAP,CACH,CAED,QAASY,CAAAA,MAAT,CAAgBZ,MAAhB,CAAwB,CACpB,MAAQA,CAAAA,MAAM,CAACkB,UAAP,EAAqBjB,SAAS,CAACkB,IAAvC,CACH,CAED,QAASL,CAAAA,IAAT,CAAcd,MAAd,CAAsBoB,IAAtB,CAA4B,CACxBpB,MAAM,CAACc,IAAP,CAAYO,IAAI,CAACD,IAAD,CAAhB,EACH,CAED,QAASH,CAAAA,OAAT,CAAiBjB,MAAjB,CAAyB,CACrB,MAAOA,CAAAA,MAAM,CAACsB,SAAP,CAAmB,SAAAX,KAAK,QAAIY,CAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACS,IAAlB,CAAJ,EAA/B,CACH","sourcesContent":["export function startConnection(stream) {\n    let pc = new RTCPeerConnection({\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n                \n            }\n        ]\n    })\n\n    var socket = new WebSocket(\"ws://\" + window.location.hostname + \":8050/ws\");\n\n    pc.addStream(stream)\n    pc.createOffer().then(d => pc.setLocalDescription(d))\n\n    pc.onicecandidate = event => {\n        if ( isOpen(socket) && event.candidate != null) {\n            send(socket, JSON.stringify(event.candidate))\n        }\n    };\n\n    receive(socket)\n}\n\nfunction isOpen(socket) {\n    return (socket.readyState == WebSocket.OPEN)\n}\n\nfunction send(socket, data) {\n    socket.send(btoa(data))\n}\n\nfunction receive(socket) {\n    return socket.onmessage = event => console.log(event.data)\n}"]},"metadata":{},"sourceType":"module"}