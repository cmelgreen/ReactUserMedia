{"ast":null,"code":"import _slicedToArray from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{webRTCClient}from'./webRTCClient';export function UserMedia(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),stream=_useState2[0],setStream=_useState2[1];useEffect(function(){// async function startStream() {\n//     const video = await navigator.mediaDevices.getUserMedia({ video: true });\n//     setStream(video); \n// }\nnewWebRTCClient();// function startStream() {\n//     pc.ontrack = event => {\n//     console.log(\"ontrack: \", event.streams[0])\n//     const video = event.streams[0]\n//     setStream(video)\n// }\n//startStream()\n},[]);return stream;}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/UserMedia.js"],"names":["useState","useEffect","webRTCClient","UserMedia","stream","setStream","newWebRTCClient"],"mappings":"gKAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,MAAO,SAASC,CAAAA,SAAT,EAAqB,eACIH,QAAQ,CAAC,IAAD,CADZ,wCACjBI,MADiB,eACTC,SADS,eAGxBJ,SAAS,CAAE,UAAM,CAEb;AACA;AACA;AACA;AAGAK,eAAe,GAEf;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAlBQ,CAkBN,EAlBM,CAAT,CAoBA,MAAOF,CAAAA,MAAP,CACH","sourcesContent":["import { useState, useEffect } from 'react';\nimport { webRTCClient } from './webRTCClient';\n\nexport function UserMedia() {\n    const [stream, setStream] = useState(null);\n\n    useEffect (() => {\n\n        // async function startStream() {\n        //     const video = await navigator.mediaDevices.getUserMedia({ video: true });\n        //     setStream(video); \n        // }\n\n\n        newWebRTCClient()\n\n        // function startStream() {\n        //     pc.ontrack = event => {\n        //     console.log(\"ontrack: \", event.streams[0])\n        //     const video = event.streams[0]\n        //     setStream(video)\n        // }\n        //startStream()\n\n    }, []);\n\n    return stream;\n}"]},"metadata":{},"sourceType":"module"}