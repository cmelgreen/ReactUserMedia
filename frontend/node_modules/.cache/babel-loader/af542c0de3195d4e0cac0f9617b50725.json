{"ast":null,"code":"export function startConnection(stream){var pc=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'}]});pc.addStream(stream);pc.createOffer().then(function(d){return pc.setLocalDescription(d);});var socket=new WebSocket(\"ws://localhost:8050/ws\");socket.onopen=function(status){return console.log(status);};pc.onicecandidate=function(event){if(event.candidate!=null){send(socket,pc.localDescription);}};}function send(socket,data){if(socket.readyState){socket.send(data);}// var xhttp = new XMLHttpRequest();\n// xhttp.open(\"POST\", \"/ws\", true); \n// xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n// xhttp.send(data);\n}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTC.js"],"names":["startConnection","stream","pc","RTCPeerConnection","iceServers","urls","addStream","createOffer","then","d","setLocalDescription","socket","WebSocket","onopen","status","console","log","onicecandidate","event","candidate","send","localDescription","data","readyState"],"mappings":"AAAA,MAAO,SAASA,CAAAA,eAAT,CAAyBC,MAAzB,CAAiC,CACpC,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,iBAAJ,CAAsB,CAC3BC,UAAU,CAAE,CACR,CACIC,IAAI,CAAE,8BADV,CADQ,CADe,CAAtB,CAAT,CASAH,EAAE,CAACI,SAAH,CAAaL,MAAb,EACAC,EAAE,CAACK,WAAH,GAAiBC,IAAjB,CAAsB,SAAAC,CAAC,QAAIP,CAAAA,EAAE,CAACQ,mBAAH,CAAuBD,CAAvB,CAAJ,EAAvB,EAEA,GAAIE,CAAAA,MAAM,CAAG,GAAIC,CAAAA,SAAJ,CAAc,wBAAd,CAAb,CACAD,MAAM,CAACE,MAAP,CAAgB,SAAAC,MAAM,QAClBC,CAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,CADkB,EAAtB,CAIAZ,EAAE,CAACe,cAAH,CAAoB,SAAAC,KAAK,CAAI,CACzB,GAAIA,KAAK,CAACC,SAAN,EAAmB,IAAvB,CAA6B,CACzBC,IAAI,CAACT,MAAD,CAAST,EAAE,CAACmB,gBAAZ,CAAJ,CACH,CACJ,CAJD,CAKH,CAED,QAASD,CAAAA,IAAT,CAAcT,MAAd,CAAsBW,IAAtB,CAA4B,CACxB,GAAIX,MAAM,CAACY,UAAX,CAAuB,CACnBZ,MAAM,CAACS,IAAP,CAAYE,IAAZ,EACH,CAED;AACA;AACA;AACA;AACH","sourcesContent":["export function startConnection(stream) {\n    let pc = new RTCPeerConnection({\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n                \n            }\n        ]\n    })\n\n    pc.addStream(stream)\n    pc.createOffer().then(d => pc.setLocalDescription(d))\n\n    var socket = new WebSocket(\"ws://localhost:8050/ws\");\n    socket.onopen = status => (\n        console.log(status)\n    )\n\n    pc.onicecandidate = event => {\n        if (event.candidate != null) {\n            send(socket, pc.localDescription)\n        }\n    };\n}\n\nfunction send(socket, data) {\n    if (socket.readyState) {\n        socket.send(data)\n    }\n\n    // var xhttp = new XMLHttpRequest();\n    // xhttp.open(\"POST\", \"/ws\", true); \n    // xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    // xhttp.send(data);\n}"]},"metadata":{},"sourceType":"module"}