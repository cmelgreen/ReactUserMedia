{"ast":null,"code":"import _regeneratorRuntime from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export function newWebRTCClient(){var conn=new connHandler();conn.negotiate();}var defaultIceServers={iceServers:[{urls:'stun:stun.l.google.com:19302'}]};var connHandler=/*#__PURE__*/function(){function connHandler(){var _this=this;_classCallCheck(this,connHandler);this.socket=new WebSocket(\"ws://\"+window.location.hostname+\":8050/ws\");this.peerConnection=new RTCPeerConnection(defaultIceServers);this.listener=null;this.peerConnection.oniceconnectionstatechange=function(){return console.log(\"state change\",_this.peerConnection.iceConnectionState);};this.peerConnection.onnegotiationneeded=function(e){console.log(\"negotiationNeeded\");if(_this.peerConnection.localDescription!=null){_this.sendOffer();}};}_createClass(connHandler,[{key:\"negotiate\",value:function negotiate(){this.sendOffer();this.startUserMedia(this);this.sendIceCandidates();this.startListener();//.then(this.addMediaTrack())\n}},{key:\"sendOffer\",value:function sendOffer(){var _this2=this;console.log(\"sendOffer\");this.peerConnection.createOffer().then(function(d){_this2.peerConnection.setLocalDescription(d);_this2.send(d);});}},{key:\"startUserMedia\",value:function startUserMedia(conn){var f=/*#__PURE__*/function(){var _startStream=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var video,_iterator,_step,track;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"startUserMedia F\");_context.next=3;return navigator.mediaDevices.getUserMedia({video:true});case 3:video=_context.sent;_iterator=_createForOfIteratorHelper(video.getVideoTracks());try{for(_iterator.s();!(_step=_iterator.n()).done;){track=_step.value;conn.peerConnection.addTrack(track,video);console.log(conn,track);}}catch(err){_iterator.e(err);}finally{_iterator.f();}case 6:case\"end\":return _context.stop();}}},_callee);}));function startStream(){return _startStream.apply(this,arguments);}return startStream;}();f();}},{key:\"startListener\",value:function startListener(){console.log(\"startListener\");this.listener=this.newListener();}},{key:\"newListener\",value:function newListener(){console.log(\"newListener\");var conn=this;this.socket.onmessage=function(event){var message=JSON.parse(event.data);if(message.sdp){conn.receiveOffer(message);}else if(message.candidate){conn.receiveICECandidate(message);}};}},{key:\"receiveOffer\",value:function receiveOffer(message){console.log(\"receiveOffer\");this.peerConnection.setRemoteDescription(new RTCSessionDescription(message));this.sendAnswer();}},{key:\"sendAnswer\",value:function sendAnswer(){console.log(\"sendAnswer\");var conn=this;conn.peerConnection.createAnswer().then(function(answer){console.log(answer);conn.send(answer);return conn.peerConnection.setLocalDescription(answer);});}},{key:\"addUserMedia\",value:function addUserMedia(){console.log(\"addUserMedia\");this.startUserMedia();}},{key:\"receiveICECandidate\",value:function receiveICECandidate(message){console.log(\"receiveICEcandidate: \",message);this.peerConnection.addIceCandidate(message);}},{key:\"sendIceCandidates\",value:function sendIceCandidates(){var _this3=this;console.log(\"sendIceCandidate\");return this.peerConnection.onicecandidate=function(event){if(_this3.isOpen()&&event.candidate!=null){_this3.send(event.candidate);}};}},{key:\"send\",value:function send(payload){console.log(\"send: \",payload);this.socket.send(JSON.stringify(payload));}},{key:\"isOpen\",value:function isOpen(){return this.socket.readyState==WebSocket.OPEN;}},{key:\"isOffer\",value:function isOffer(){return this.peerConnection.remoteDescription.type==\"offer\";}},{key:\"isAnswer\",value:function isAnswer(){return this.peerConnection.remoteDescription.type==\"answer\";}}]);return connHandler;}();","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTCRefactor.js"],"names":["newWebRTCClient","conn","connHandler","negotiate","defaultIceServers","iceServers","urls","socket","WebSocket","window","location","hostname","peerConnection","RTCPeerConnection","listener","oniceconnectionstatechange","console","log","iceConnectionState","onnegotiationneeded","e","localDescription","sendOffer","startUserMedia","sendIceCandidates","startListener","createOffer","then","d","setLocalDescription","send","f","navigator","mediaDevices","getUserMedia","video","getVideoTracks","track","addTrack","startStream","newListener","onmessage","event","message","JSON","parse","data","sdp","receiveOffer","candidate","receiveICECandidate","setRemoteDescription","RTCSessionDescription","sendAnswer","createAnswer","answer","addIceCandidate","onicecandidate","isOpen","payload","stringify","readyState","OPEN","remoteDescription","type"],"mappings":"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","sourcesContent":["export function newWebRTCClient() { \n    var conn = new connHandler()\n\n    conn.negotiate()\n}\n\nconst defaultIceServers = {\n    iceServers: [\n        {\n            urls: 'stun:stun.l.google.com:19302'\n        }\n    ]\n}\n\nclass connHandler {\n    constructor() {\n        this.socket = new WebSocket(\"ws://\" + window.location.hostname + \":8050/ws\")\n        this.peerConnection = new RTCPeerConnection(defaultIceServers)\n        this.listener = null\n        this.peerConnection.oniceconnectionstatechange = () => console.log(\"state change\", this.peerConnection.iceConnectionState)\n        this.peerConnection.onnegotiationneeded = e => {\n            console.log(\"negotiationNeeded\")\n            if (this.peerConnection.localDescription != null) {\n                this.sendOffer()\n            }\n        }\n    }\n\n    negotiate() {\n        this.sendOffer()\n        this.startUserMedia(this)\n        this.sendIceCandidates()\n        this.startListener()\n\n            //.then(this.addMediaTrack())\n    }\n\n    sendOffer() {\n        console.log(\"sendOffer\")\n        this.peerConnection.createOffer()\n            .then(d => {\n                this.peerConnection.setLocalDescription(d)\n                this.send(d)\n            })\n\n    }\n\n    startUserMedia(conn) {\n        const f = async function startStream() {\n            console.log(\"startUserMedia F\")\n            var video = await navigator.mediaDevices.getUserMedia({ video: true })\n            for (const track of video.getVideoTracks()) {\n                conn.peerConnection.addTrack(track, video)\n                console.log(conn, track)\n            }\n        }\n        f()\n    }\n\n    startListener() {\n        console.log(\"startListener\")\n        this.listener = this.newListener()\n    }\n\n    newListener() {\n        console.log(\"newListener\")\n        let conn = this\n        this.socket.onmessage = event => {\n            var message = JSON.parse(event.data)\n            if (message.sdp) {\n                conn.receiveOffer(message)\n            } else if (message.candidate) {\n                conn.receiveICECandidate(message)\n            }\n        }\n    }\n\n    receiveOffer(message) {\n        console.log(\"receiveOffer\")\n        this.peerConnection.setRemoteDescription(new RTCSessionDescription(message))\n        this.sendAnswer()\n    }\n\n    sendAnswer() {\n        console.log(\"sendAnswer\")\n        let conn = this\n        conn.peerConnection.createAnswer()\n            .then(answer => {\n                console.log(answer)\n                conn.send(answer)\n                return conn.peerConnection.setLocalDescription(answer)\n            })\n    }\n\n    addUserMedia() {\n        console.log(\"addUserMedia\")\n        this.startUserMedia()\n    }\n\n    receiveICECandidate(message) {\n        console.log(\"receiveICEcandidate: \", message)\n        this.peerConnection.addIceCandidate(message)\n    }\n\n    sendIceCandidates() {\n        console.log(\"sendIceCandidate\")\n        return this.peerConnection.onicecandidate = event => {\n            if ( this.isOpen() && event.candidate != null) {\n             this.send(event.candidate)\n            }}\n    }\n\n    send(payload) {\n        console.log(\"send: \", payload)\n        this.socket.send(JSON.stringify(payload))\n    }\n\n    isOpen() {\n        return ( this.socket.readyState == WebSocket.OPEN )\n    }\n    \n    isOffer() {\n        return ( this.peerConnection.remoteDescription.type == \"offer\" )\n    }\n    \n    isAnswer() {\n        return ( this.peerConnection.remoteDescription.type == \"answer\" )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}