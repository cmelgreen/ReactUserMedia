{"ast":null,"code":"import _regeneratorRuntime from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';//import { startConnection } from './webRTC';\nimport{newWebRTCClient}from'./webRTCRefactor';export function UserMedia(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),stream=_useState2[0],setStream=_useState2[1];useEffect(function(){function startStream(){return _startStream.apply(this,arguments);}function _startStream(){_startStream=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var video;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return newWebRTCClient();case 2:video=_context.sent;setStream(video);case 4:case\"end\":return _context.stop();}}},_callee);}));return _startStream.apply(this,arguments);}startStream();//startStream();\n},[]);return stream;}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/UserMedia.js"],"names":["useState","useEffect","newWebRTCClient","UserMedia","stream","setStream","startStream","video"],"mappings":"6dAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA;AACA,OAASC,eAAT,KAAgC,kBAAhC,CAEA,MAAO,SAASC,CAAAA,SAAT,EAAqB,eACIH,QAAQ,CAAC,IAAD,CADZ,wCACjBI,MADiB,eACTC,SADS,eAGxBJ,SAAS,CAAE,UAAM,SACEK,CAAAA,WADF,2IACb,mKACwBJ,CAAAA,eAAe,EADvC,QACUK,KADV,eAEIF,SAAS,CAACE,KAAD,CAAT,CAFJ,sDADa,8CAMbD,WAAW,GAEX;AACH,CATQ,CASN,EATM,CAAT,CAWA,MAAOF,CAAAA,MAAP,CACH","sourcesContent":["import { useState, useEffect } from 'react';\n//import { startConnection } from './webRTC';\nimport { newWebRTCClient } from './webRTCRefactor';\n\nexport function UserMedia() {\n    const [stream, setStream] = useState(null);\n\n    useEffect (() => {\n        async function startStream() {\n            const video = await newWebRTCClient()\n            setStream(video); \n        }\n\n        startStream()\n\n        //startStream();\n    }, []);\n\n    return stream;\n}"]},"metadata":{},"sourceType":"module"}