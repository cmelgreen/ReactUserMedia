{"ast":null,"code":"export function startConnection(stream){var pc=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'}]});var socket=new WebSocket(\"ws://localhost:8050/ws\");pc.addStream(stream);pc.createOffer().then(function(d){return pc.setLocalDescription(d);});pc.onicecandidate=function(event){if(isOpen(socket)&&event.candidate!=null){send(socket,pc.localDescription);}};}function isOpen(socket){return socket.readyState==WebSocket.OPEN;}function send(socket,data){socket.send(data);// var xhttp = new XMLHttpRequest();\n// xhttp.open(\"POST\", \"/ws\", true); \n// xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n// xhttp.send(data);\n}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTC.js"],"names":["startConnection","stream","pc","RTCPeerConnection","iceServers","urls","socket","WebSocket","addStream","createOffer","then","d","setLocalDescription","onicecandidate","event","isOpen","candidate","send","localDescription","readyState","OPEN","data"],"mappings":"AAAA,MAAO,SAASA,CAAAA,eAAT,CAAyBC,MAAzB,CAAiC,CACpC,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,iBAAJ,CAAsB,CAC3BC,UAAU,CAAE,CACR,CACIC,IAAI,CAAE,8BADV,CADQ,CADe,CAAtB,CAAT,CASA,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,SAAJ,CAAc,wBAAd,CAAb,CAEAL,EAAE,CAACM,SAAH,CAAaP,MAAb,EACAC,EAAE,CAACO,WAAH,GAAiBC,IAAjB,CAAsB,SAAAC,CAAC,QAAIT,CAAAA,EAAE,CAACU,mBAAH,CAAuBD,CAAvB,CAAJ,EAAvB,EAIAT,EAAE,CAACW,cAAH,CAAoB,SAAAC,KAAK,CAAI,CACzB,GAAKC,MAAM,CAACT,MAAD,CAAN,EAAkBQ,KAAK,CAACE,SAAN,EAAmB,IAA1C,CAAgD,CAC5CC,IAAI,CAACX,MAAD,CAASJ,EAAE,CAACgB,gBAAZ,CAAJ,CACH,CACJ,CAJD,CAKH,CAED,QAASH,CAAAA,MAAT,CAAgBT,MAAhB,CAAwB,CACpB,MAAQA,CAAAA,MAAM,CAACa,UAAP,EAAqBZ,SAAS,CAACa,IAAvC,CACH,CAED,QAASH,CAAAA,IAAT,CAAcX,MAAd,CAAsBe,IAAtB,CAA4B,CACpBf,MAAM,CAACW,IAAP,CAAYI,IAAZ,EAEJ;AACA;AACA;AACA;AACH","sourcesContent":["export function startConnection(stream) {\n    let pc = new RTCPeerConnection({\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n                \n            }\n        ]\n    })\n\n    var socket = new WebSocket(\"ws://localhost:8050/ws\");\n\n    pc.addStream(stream)\n    pc.createOffer().then(d => pc.setLocalDescription(d))\n\n\n\n    pc.onicecandidate = event => {\n        if ( isOpen(socket) && event.candidate != null) {\n            send(socket, pc.localDescription)\n        }\n    };\n}\n\nfunction isOpen(socket) {\n    return (socket.readyState == WebSocket.OPEN)\n}\n\nfunction send(socket, data) {\n        socket.send(data)\n\n    // var xhttp = new XMLHttpRequest();\n    // xhttp.open(\"POST\", \"/ws\", true); \n    // xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    // xhttp.send(data);\n}"]},"metadata":{},"sourceType":"module"}