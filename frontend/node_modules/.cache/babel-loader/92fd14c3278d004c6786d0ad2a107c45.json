{"ast":null,"code":"import _regeneratorRuntime from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export function newWebRTCClient(){var conn=new connHandler();conn.negotiate();}var defaultIceServers={iceServers:[{urls:'stun:stun.l.google.com:19302'}]};var connHandler=/*#__PURE__*/function(){function connHandler(){_classCallCheck(this,connHandler);this.socket=new WebSocket(\"ws://\"+window.location.hostname+\":8050/ws\");this.peerConnection=new RTCPeerConnection(defaultIceServers);this.listener=null;}_createClass(connHandler,[{key:\"negotiate\",value:function negotiate(){var _this=this;this.peerConnection.createOffer().then(function(d){return _this.peerConnection.setLocalDescription(d);});this.receiveOffer();this.addUserMedia();this.sendIceCandidates();this.receiveIceCandidates();}},{key:\"receiveOffer\",value:function receiveOffer(){console.log(\"receiveOffer\");this.listener=this.newListener();if(this.listener().sdp){this.peerConnection.setRemoteDescription(new RTCSessionDescription(this.listener()),function(){if(this.peerConnection.remoteDescription.type==\"offer\"){this.peerConnection.createAnswer().then(function(answer){this.send(answer);return this.peerConnection.setLocalDescription(answer);}).catch(function(e){return console.log(e);});}},function(e){return console.log(e);});}}},{key:\"newListener\",value:function newListener(){console.log(\"newListener\");return this.socket.onmessage=function(event){console.log(event.data);var message=JSON.parse(event.data);return message;};}},{key:\"addUserMedia\",value:function addUserMedia(){console.log(\"addUserMedia\");function startStream(){return _startStream.apply(this,arguments);}function _startStream(){_startStream=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return navigator.mediaDevices.getUserMedia({video:true});case 2:this.video=_context.sent;case 3:case\"end\":return _context.stop();}}},_callee,this);}));return _startStream.apply(this,arguments);}startStream();}},{key:\"sendIceCandidates\",value:function sendIceCandidates(){var _this2=this;console.log(\"sendIceCandidate\");return this.peerConnection.onicecandidate=function(event){if(isOpen(_this2.socket)&&event.candidate!=null){_this2.send(_this2.socket,event.candidate);}};}},{key:\"send\",value:function send(payload){console.log(\"send: \",payload);this.socket.send(JSON.stringify(payload));}},{key:\"listen\",value:function listen(){return this.socket.onmessage=function(evt){try{var message=JSON.parse(evt.data);console.log(\"receiving: \",message);if(message.sdp){}else{this.peerConnection.addIceCandidate(message).then(console.log(\"candidate added\")).catch(function(e){return console.log(e);});}}catch(e){console.log(\"error: \",e);console.log(\"message: \");}};}}]);return connHandler;}();function isOpen(socket){return socket.readyState==WebSocket.OPEN;}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTCRefactor.js"],"names":["newWebRTCClient","conn","connHandler","negotiate","defaultIceServers","iceServers","urls","socket","WebSocket","window","location","hostname","peerConnection","RTCPeerConnection","listener","createOffer","then","d","setLocalDescription","receiveOffer","addUserMedia","sendIceCandidates","receiveIceCandidates","console","log","newListener","sdp","setRemoteDescription","RTCSessionDescription","remoteDescription","type","createAnswer","answer","send","catch","e","onmessage","event","data","message","JSON","parse","startStream","navigator","mediaDevices","getUserMedia","video","onicecandidate","isOpen","candidate","payload","stringify","evt","addIceCandidate","readyState","OPEN"],"mappings":"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","sourcesContent":["export function newWebRTCClient() { \n    var conn = new connHandler()\n\n    conn.negotiate()\n}\n\nconst defaultIceServers = {\n    iceServers: [\n        {\n            urls: 'stun:stun.l.google.com:19302'\n        }\n    ]\n}\n\nclass connHandler {\n    constructor() {\n        this.socket = new WebSocket(\"ws://\" + window.location.hostname + \":8050/ws\")\n        this.peerConnection = new RTCPeerConnection(defaultIceServers)\n        this.listener = null\n    }\n\n    negotiate() {\n        this.peerConnection.createOffer()\n            .then(d => this.peerConnection.setLocalDescription(d))\n            this.receiveOffer()\n            this.addUserMedia()\n            this.sendIceCandidates()\n            this.receiveIceCandidates()\n    }\n\n    receiveOffer() {\n        console.log(\"receiveOffer\")\n        this.listener = this.newListener()\n\n        if ( this.listener().sdp ) {\n            this.peerConnection.setRemoteDescription(new RTCSessionDescription(this.listener()), function () {\n                if (this.peerConnection.remoteDescription.type == \"offer\") {\n                    this.peerConnection.createAnswer().then(function(answer) {\n                        this.send(answer);\n                        return this.peerConnection.setLocalDescription(answer);\n                    })\n                    .catch(e => console.log(e));\n                }\n            }, e => console.log(e))\n        } \n    }\n\n    newListener() {\n        console.log(\"newListener\")\n        return this.socket.onmessage = function(event) {\n            console.log(event.data)\n            var message = JSON.parse(event.data)\n            return message\n        }\n    }\n\n    addUserMedia() {\n        console.log(\"addUserMedia\")\n        async function startStream() {\n            this.video = await navigator.mediaDevices.getUserMedia({ video: true })\n        }\n        startStream()\n    }\n\n    sendIceCandidates() {\n        console.log(\"sendIceCandidate\")\n        return this.peerConnection.onicecandidate = event => {\n            if ( isOpen(this.socket) && event.candidate != null) {\n                this.send(this.socket, event.candidate)\n            }}\n    }\n\n    send(payload) {\n        console.log(\"send: \", payload)\n        this.socket.send(JSON.stringify(payload))\n    }\n\n\n\n    listen() {\n        return this.socket.onmessage = function (evt) {\n            try {\n                var message = JSON.parse(evt.data);\n                console.log(\"receiving: \", message)\n                if (message.sdp) {\n\n                } else {\n                    this.peerConnection.addIceCandidate(message)\n                        .then(console.log(\"candidate added\"))\n                        .catch( e => console.log(e))\n                }\n            } catch(e) {\n                console.log(\"error: \", e)\n                console.log(\"message: \", )\n            }\n        \n        }\n    }\n}\n\nfunction isOpen(socket) {\n    return (socket.readyState == WebSocket.OPEN)\n}"]},"metadata":{},"sourceType":"module"}