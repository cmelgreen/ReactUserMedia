{"ast":null,"code":"export function startConnection(stream){var pc=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'}]});var socket=new WebSocket(\"ws://\"+window.location.hostname+\":8050/ws\");pc.addStream(stream);pc.createOffer().then(function(d){return pc.setLocalDescription(d);});pc.onicecandidate=function(event){if(isOpen(socket)&&event.candidate!=null){send(socket,event.candidate);}};receive(socket,pc);}function isOpen(socket){return socket.readyState==WebSocket.OPEN;}function send(socket,data){socket.send(JSON.stringify(data));}function receive(socket,pc){return socket.onmessage=function(evt){var message=JSON.parse(evt.data);console.log(message);console.log(pc);if(message.sdp){pc.setRemoteDescription(new RTCSessionDescription(message),function(){if(pc.remoteDescription.type==\"offer\"){pc.createAnswer().then(function(answer){return send(answer);});}},function(e){return console.log(\"e\");}).then(console.log(pc));}else if(message.candidate){}};}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTC.js"],"names":["startConnection","stream","pc","RTCPeerConnection","iceServers","urls","socket","WebSocket","window","location","hostname","addStream","createOffer","then","d","setLocalDescription","onicecandidate","event","isOpen","candidate","send","receive","readyState","OPEN","data","JSON","stringify","onmessage","evt","message","parse","console","log","sdp","setRemoteDescription","RTCSessionDescription","remoteDescription","type","createAnswer","answer","e"],"mappings":"AAAA,MAAO,SAASA,CAAAA,eAAT,CAAyBC,MAAzB,CAAiC,CACpC,GAAIC,CAAAA,EAAE,CAAG,GAAIC,CAAAA,iBAAJ,CAAsB,CAC3BC,UAAU,CAAE,CACR,CACIC,IAAI,CAAE,8BADV,CADQ,CADe,CAAtB,CAAT,CASA,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,SAAJ,CAAc,QAAUC,MAAM,CAACC,QAAP,CAAgBC,QAA1B,CAAqC,UAAnD,CAAb,CAEAR,EAAE,CAACS,SAAH,CAAaV,MAAb,EACAC,EAAE,CAACU,WAAH,GAAiBC,IAAjB,CAAsB,SAAAC,CAAC,QAAIZ,CAAAA,EAAE,CAACa,mBAAH,CAAuBD,CAAvB,CAAJ,EAAvB,EAEAZ,EAAE,CAACc,cAAH,CAAoB,SAAAC,KAAK,CAAI,CACzB,GAAKC,MAAM,CAACZ,MAAD,CAAN,EAAkBW,KAAK,CAACE,SAAN,EAAmB,IAA1C,CAAgD,CAC5CC,IAAI,CAACd,MAAD,CAASW,KAAK,CAACE,SAAf,CAAJ,CACH,CACJ,CAJD,CAMAE,OAAO,CAACf,MAAD,CAASJ,EAAT,CAAP,CACH,CAED,QAASgB,CAAAA,MAAT,CAAgBZ,MAAhB,CAAwB,CACpB,MAAQA,CAAAA,MAAM,CAACgB,UAAP,EAAqBf,SAAS,CAACgB,IAAvC,CACH,CAED,QAASH,CAAAA,IAAT,CAAcd,MAAd,CAAsBkB,IAAtB,CAA4B,CACxBlB,MAAM,CAACc,IAAP,CAAYK,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAZ,EACH,CAED,QAASH,CAAAA,OAAT,CAAiBf,MAAjB,CAAyBJ,EAAzB,CAA6B,CACzB,MAAOI,CAAAA,MAAM,CAACqB,SAAP,CAAmB,SAAUC,GAAV,CAAe,CAErC,GAAIC,CAAAA,OAAO,CAAGJ,IAAI,CAACK,KAAL,CAAWF,GAAG,CAACJ,IAAf,CAAd,CACAO,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACAE,OAAO,CAACC,GAAR,CAAY9B,EAAZ,EAEA,GAAI2B,OAAO,CAACI,GAAZ,CAAiB,CACb/B,EAAE,CAACgC,oBAAH,CAAwB,GAAIC,CAAAA,qBAAJ,CAA0BN,OAA1B,CAAxB,CAA4D,UAAY,CACpE,GAAI3B,EAAE,CAACkC,iBAAH,CAAqBC,IAArB,EAA6B,OAAjC,CAA0C,CACtCnC,EAAE,CAACoC,YAAH,GACKzB,IADL,CACU,SAAA0B,MAAM,QAAInB,CAAAA,IAAI,CAACmB,MAAD,CAAR,EADhB,EAEH,CACJ,CALD,CAKG,SAAAC,CAAC,QAAIT,CAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAJ,EALJ,EAMKnB,IANL,CAMUkB,OAAO,CAACC,GAAR,CAAY9B,EAAZ,CANV,EAOH,CARD,IAQO,IAAI2B,OAAO,CAACV,SAAZ,CAAuB,CAE7B,CAEJ,CAlBD,CAmBH","sourcesContent":["export function startConnection(stream) {\n    let pc = new RTCPeerConnection({\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n                \n            }\n        ]\n    })\n\n    var socket = new WebSocket(\"ws://\" + window.location.hostname + \":8050/ws\");\n\n    pc.addStream(stream)\n    pc.createOffer().then(d => pc.setLocalDescription(d))\n\n    pc.onicecandidate = event => {\n        if ( isOpen(socket) && event.candidate != null) {\n            send(socket, event.candidate)\n        }\n    };\n\n    receive(socket, pc)\n}\n\nfunction isOpen(socket) {\n    return (socket.readyState == WebSocket.OPEN)\n}\n\nfunction send(socket, data) {\n    socket.send(JSON.stringify(data))\n}\n\nfunction receive(socket, pc) {\n    return socket.onmessage = function (evt) {\n\n        var message = JSON.parse(evt.data);\n        console.log(message)\n        console.log(pc)\n\n        if (message.sdp) {\n            pc.setRemoteDescription(new RTCSessionDescription(message), function () {\n                if (pc.remoteDescription.type == \"offer\") {\n                    pc.createAnswer()\n                        .then(answer => send(answer))\n                }\n            }, e => console.log(\"e\"))\n                .then(console.log(pc));\n        } else if (message.candidate) {\n\n        }\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}