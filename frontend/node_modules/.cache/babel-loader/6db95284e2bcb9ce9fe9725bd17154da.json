{"ast":null,"code":"export function startConnection(stream){var pc=new RTCPeerConnection({iceServers:[{urls:'stun:stun.l.google.com:19302'}]});var socket=new WebSocket(\"ws://\"+window.location.hostname+\":8050/ws\");pc.addStream(stream);pc.createOffer().then(function(d){return pc.setLocalDescription(d);});pc.onicecandidate=function(event){if(isOpen(socket)&&event.candidate!=null){send(socket,event.candidate);}};receive(socket,pc);}function isOpen(socket){return socket.readyState==WebSocket.OPEN;}function send(socket,data){try{socket.send(JSON.stringify(data));console.log(\"sending: \",data);}catch(e){console.log(e);}}function receive(socket,pc){return socket.onmessage=function(evt){try{var message=JSON.parse(evt.data);console.log(\"receiving: \",message);if(message.sdp){pc.setRemoteDescription(new RTCSessionDescription(message),function(){if(pc.remoteDescription.type==\"offer\"){pc.createAnswer().then(function(answer){send(socket,answer);return pc.setLocalDescription(answer);}).catch(function(e){return console.log(e);});}},function(e){return console.log(\"e\");});}else{pc.addIceCandidate(message).then(console.log(\"candidate added\")).catch(function(e){return console.log(e);});}}catch(e){console.log(\"error: \",e);console.log(\"message: \");}};}","map":{"version":3,"sources":["/home/cmelgreen/GoProjects/src/ReactUserMedia/frontend/src/camera/webRTC.js"],"names":["startConnection","stream","pc","RTCPeerConnection","iceServers","urls","socket","WebSocket","window","location","hostname","addStream","createOffer","then","d","setLocalDescription","onicecandidate","event","isOpen","candidate","send","receive","readyState","OPEN","data","JSON","stringify","console","log","e","onmessage","evt","message","parse","sdp","setRemoteDescription","RTCSessionDescription","remoteDescription","type","createAnswer","answer","catch","addIceCandidate"],"mappings":"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","sourcesContent":["export function startConnection(stream) {\n    let pc = new RTCPeerConnection({\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n                \n            }\n        ]\n    })\n\n    var socket = new WebSocket(\"ws://\" + window.location.hostname + \":8050/ws\");\n\n    pc.addStream(stream)\n    pc.createOffer().then(d => pc.setLocalDescription(d))\n\n    pc.onicecandidate = event => {\n        if ( isOpen(socket) && event.candidate != null) {\n            send(socket, event.candidate)\n        }\n    };\n\n    receive(socket, pc)\n}\n\nfunction isOpen(socket) {\n    return (socket.readyState == WebSocket.OPEN)\n}\n\nfunction send(socket, data) {\n    try {\n        socket.send(JSON.stringify(data))\n        console.log(\"sending: \", data)\n    } catch(e) {\n        console.log(e)\n    }\n}\n\nfunction receive(socket, pc) {\n    return socket.onmessage = function (evt) {\n\n        try {\n            var message = JSON.parse(evt.data);\n            console.log(\"receiving: \", message)\n            if (message.sdp) {\n                pc.setRemoteDescription(new RTCSessionDescription(message), function () {\n                    if (pc.remoteDescription.type == \"offer\") {\n                        pc.createAnswer().then(function(answer) {\n                            send(socket, answer);\n                            return pc.setLocalDescription(answer);\n                        })\n                        .catch(e => console.log(e));\n                    }\n                }, e => console.log(\"e\"))\n            } else {\n                pc.addIceCandidate(message)\n                    .then(console.log(\"candidate added\"))\n                    .catch( e => console.log(e))\n            }\n        } catch(e) {\n            console.log(\"error: \", e)\n            console.log(\"message: \", )\n        }\n    \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}